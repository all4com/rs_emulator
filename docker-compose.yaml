services:
  login_server:
    build: ./docker/rs_server
    container_name: login_server
    restart: always
    volumes:
      - '.:/work'
    working_dir: /work/src/rs_server
    environment:
      SERVER_NAME: login_server
    ports:
      - "${LOGIN_SERVER_PORT}:${LOGIN_SERVER_PORT}"
    command: watchmedo auto-restart --patterns="*.py" --recursive -- python -u -m login.login
    networks:
      - bridge-network

  game_server:
    build: ./docker/rs_server
    container_name: game_server
    restart: always
    volumes:
      - '.:/work'
    working_dir: /work/src/rs_server
    environment:
      SERVER_NAME: game_server
    ports:
      - "${GAME_SERVER_PORT}:${GAME_SERVER_PORT}"
    command: python -u -m game.game
    networks:
      - bridge-network

  api_server:
    build:
      context: ./docker/api_server
    container_name: api_server
    volumes:
      - './src/api_server:/work'
    ports:
      - "${API_PORT}:8000"
    depends_on:
      - login_server
      - game_server
    networks:
      - bridge-network
      
  mongodb:
    image: mongo:latest
    container_name: database_server
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${DATABASE_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${DATABASE_PASSWORD}"
    ports:
      - "${DATABASE_PORT}:27017"
    volumes:
      - ./docker/database:/data/db
    networks:
      - bridge-network

networks:
  bridge-network:
    driver: bridge